/*
 * This source file was generated by the Gradle 'init' task
 */
package org.upeople.disc;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.Stage;
import javafx.stage.StageStyle;

import org.upeople.disc.utils.Calc;

/**
 * Main JavaFX application class for the calculator.
 * This class sets up the GUI dynamically and links button events
 * to the calculation logic in the Calc utility class.
 */
public class CalculatorApp extends Application {

    private TextField display; // TextField to display input and results

    @Override
    public void start(Stage primaryStage) {
    	primaryStage.initStyle(StageStyle.DECORATED); // garante barra do SO
        primaryStage.setTitle("Basic JavaFX Calculator");

        // Create the display field at the top
        display = new TextField();
        display.setAlignment(Pos.CENTER_RIGHT);
        display.setEditable(false); // Prevent manual typing
        display.setPrefHeight(50);

        // Create button layout using a GridPane
        GridPane buttonGrid = new GridPane();
        buttonGrid.setHgap(5);
        buttonGrid.setVgap(5);
        buttonGrid.setPadding(new Insets(10));

        // Button labels arranged as in a standard calculator
        String[][] buttons = {
            {"7", "8", "9", "/"},
            {"4", "5", "6", "*"},
            {"1", "2", "3", "-"},
            {"0", "C", "=", "+"}
        };

        // Dynamically create buttons and attach event handlers
        for (int i = 0; i < buttons.length; i++) {
            for (int j = 0; j < buttons[i].length; j++) {
                String text = buttons[i][j];
                Button btn = new Button(text);
                btn.setPrefSize(60, 60);

                // Link button click to the Calc utility class
                btn.setOnAction(e -> Calc.handleButton(text, display));

                buttonGrid.add(btn, j, i);
            }
        }

        // Combine display and buttons in a vertical layout
        VBox root = new VBox(10, display, buttonGrid);
        root.setAlignment(Pos.CENTER);
        root.setPadding(new Insets(10));

        Scene scene = new Scene(root, 300, 350);
        primaryStage.setScene(scene);

        primaryStage.setResizable(false);
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
