/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.1.0/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'eclipse'                     // Integração com Eclipse (gera arquivos .project e .classpath)
    id 'org.openjfx.javafxplugin' version '0.1.0'  // Plugin JavaFX
    id 'org.beryx.jlink' version '2.26.0'          // Para criar runtime customizado com jlink
}
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    
}

dependencies {
    // Use JUnit Jupiter for testing.
 
 	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    
    // biblioteca ZXing (“Zebra Crossing”), que é a mais popular para criar QR Codes em Java.
    implementation 'com.google.zxing:core:3.5.3'
    
    implementation 'com.google.zxing:javase:3.5.3'
    
    // org.json for JSON persistence
    implementation 'org.json:json:20231013'
    
}

test {
    useJUnitPlatform()
}

javafx {
    version = "24.0.2"
     modules = [ 'javafx.controls', 'javafx.graphics', 'javafx.swing', 'javafx.base' ]  // aqui você declara os módulos que vai usar
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.upeople.assignment.StudentManagementSystem'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
